generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id         Int         @id @default(autoincrement())
    fullName   String
    email      String      @unique
    password   String
    roleId     Int
    department String?
    role       Role        @relation(fields: [roleId], references: [id])
    managerOf  Team[]      @relation("managerOf")
    memberOf   Team[]      @relation("memberOf")
    checklists Checklist[]
}

model Role {
    id    Int    @id @default(autoincrement())
    name  String
    users User[]
}

model Team {
    id        Int    @id @default(autoincrement())
    name      String @unique
    managerId Int
    manager   User   @relation("managerOf", fields: [managerId], references: [id])
    members   User[] @relation("memberOf")
}

model Checklist {
    id         Int     @id @default(autoincrement())
    name       String
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    managerId  Int
    manager    User    @relation(fields: [managerId], references: [id])
}

//////////////////////////////////////////////////////////////////////////////////////////////////////

// Necessary for Next auth
// model Account {
//     id                String  @id @default(cuid())
//     userId            String
//     type              String
//     provider          String
//     providerAccountId String
//     refresh_token     String? // @db.Text
//     access_token      String? // @db.Text
//     expires_at        Int?
//     token_type        String?
//     scope             String?
//     id_token          String? // @db.Text
//     session_state     String?
//     user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

//     @@unique([provider, providerAccountId])
// }

// model Session {
//     id           String   @id @default(cuid())
//     sessionToken String   @unique
//     userId       String
//     expires      DateTime
//     user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

// }

// model VerificationToken {
//     identifier String
//     token      String   @unique
//     expires    DateTime

//     @@unique([identifier, token])
// }
