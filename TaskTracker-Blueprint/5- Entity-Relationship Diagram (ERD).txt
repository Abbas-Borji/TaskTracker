// Textual Representation - Needs Refactoring

Entities:

1- User: Represents the users of the system, including employees, managers, and admins.

userID (Primary Key)
fullName
email
username
password
role

2- Checklist: Represents the checklists created by managers.

checklistID (Primary Key)
title
managerID (Foreign Key)

3- Submission: Represents the completed checklists submitted by employees.

submissionID (Primary Key)
checklistID (Foreign Key)
userID (Foreign Key)
submissionDate

4- Question: Represents the individual questions within a checklist.

questionID (Primary Key)
checklistID (Foreign Key)
text

5- Answer: Represents the answers provided by employees for each question.

answerID (Primary Key)
submissionID (Foreign Key)
questionID (Foreign Key)
response

Relationships:

1- User-Checklist (1-to-Many):

One manager can create multiple checklists.
One checklist is created by only one manager.
Manager_ID (User) references User_ID (User)

2- User-Submission (1-to-Many):

One employee can submit multiple checklists.
One checklist can be submitted by only one employee.
Employee_ID (User) references User_ID (User)

3- Question-Answer (1-to-Many):

One question can have multiple answers.
One answer belongs to only one question.
Submission_ID (Submission) references Submission_ID (Answer)
Question_ID (Question) references Question_ID (Answer)

4- Submission-Answer (1-to-Many):

One submission can have multiple answers.
One answer belongs to only one submission.
Submission_ID (Submission) references Submission_ID (Answer)
Question_ID (Question) references Question_ID (Answer)

5- Checklist-Question (Many-to-Many):

One checklist can have 0 or more questions.
One question belongs to one or more checklists.
This relationship will be presented as a separate entity (isQuestionOf), acting as a junction table.